{"version":3,"sources":["components/Balance.tsx","utils/calls/farms.ts","components/Tags.tsx","components/TokenImage/index.tsx","components/ApyCalculatorModal/index.tsx","components/Layout/Flex.tsx","utils/latinise.ts","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx"],"names":["Balance","value","color","decimals","isDisabled","unit","prefix","onClick","props","previousValue","useRef","useEffect","current","start","end","suffix","duration","separator","options","gasLimit","DEFAULT_GAS_LIMIT","stakeFarm","masterChefContract","pid","amount","a","BigNumber","times","DEFAULT_TOKEN_DECIMAL","toString","enterStaking","tx","wait","receipt","status","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","CoreTag","t","useTranslation","variant","outline","startIcon","width","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","getImageUrlFromToken","token","address","getAddress","symbol","tokens","wbnb","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","Grid","styled","div","GridItem","GridHeaderItem","BulletList","ul","theme","colors","textSubtle","ApyCalculatorModal","onDismiss","tokenPrice","apr","displayApr","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","performanceFee","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","title","mb","justifyContent","small","toFixed","fontSize","bold","textTransform","textAlign","ml","num","getRoi","amountEarned","amountInvested","style","maxWidth","p","display","freq","toLocaleString","mt","fee","href","FlexLayout","Latinise","latin_map","τ","Τ","latinise","input","replace","x","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","mediaQueries","sm","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ListItem","li","Select","onChange","containerRef","dropdownRef","useState","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","event","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","document","addEventListener","removeEventListener","ref","label","map","option","index","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","lg","Inner","Container","PageHeader","background","children","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","useMemo","debounce","e","target","onBlur"],"mappings":"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","file":"static/js/0.75ad2141.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  \n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst Inner = styled(Container)`\n  // padding-top: 32px;\n  // padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n"],"sourceRoot":""}