{"version":3,"sources":["../node_modules/countup.js/dist/countUp.min.js","../node_modules/react-countup/build/index.js","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/hooks/useStakeFarms.ts","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/hooks/useApproveFarm.ts","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx"],"names":["define","a","n","t","e","i","r","o","s","Math","abs","toFixed","l","decimals","split","length","options","decimal","useGrouping","separator","numerals","replace","prefix","suffix","pow","u","isNaN","this","version","useEasing","easingFn","formattingFn","m","hasOwnProperty","d","c","f","window","requestAnimationFrame","cancelAnimationFrame","Date","getTime","max","setTimeout","clearTimeout","initialize","initialized","error","document","getElementById","startVal","Number","endVal","dec","duration","countDown","frameVal","printValue","tagName","value","textContent","innerHTML","count","startTime","timestamp","remaining","round","rAF","callback","start","pauseResume","paused","reset","update","Object","defineProperty","exports","PropTypes","require","React","warning","CountUp$1","_interopDefaultLegacy","PropTypes__default","React__default","warning__default","CountUp__default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","obj","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","_isNativeReflectConstruct","result","Super","NewTarget","constructor","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","createCountUpInstance","el","end","CountUp","_Component","subClass","superClass","create","_inherits","protoProps","staticProps","_super","_this","_len","args","_key","concat","updatedProps","_this$props","redraw","className","children","containerRef","current","HTMLElement","SVGTextElement","SVGTSpanElement","_assertThisInitialize","restart","onPauseResume","_assertThisInitialize2","onReset","_assertThisInitialize3","_this$props2","delay","onEnd","onStart","run","timeoutId","newEnd","_assertThisInitialize4","onUpdate","createRef","_this$props3","createInstance","nextProps","checkProps","prevProps","_this$props4","preserveValue","_this$props5","style","countUpRef","createElement","ref","Component","string","number","func","isRequired","bool","startOnMount","undefined","MOCK_ELEMENT","default","useCountUp","_props","defaultProps","_useState2","useState","setCount","useRef","timerRef","getCountUp","countUp","newCountUp","formattingFnRef","useEffect","Wrapper","styled","div","ExpandableSectionButton","onClick","expanded","useTranslation","role","color","bold","ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","width","height","href","symbol","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","token","quoteToken","alignItems","mb","variant","primaryToken","secondaryToken","flexDirection","StyledSpacer","size","Spacer","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","Children","toArray","map","child","StyledTokenInput","input","isWarning","shadows","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","onChange","onSelectMax","inputTitle","isBalanceZero","position","pl","fontSize","balance","balanceBigNumber","BigNumber","gt","lt","toLocaleString","ROUND_DOWN","displayBalance","pattern","inputMode","step","min","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","useToast","toastSuccess","toastError","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","fullBalanceNumber","handleChange","useCallback","currentTarget","validity","valid","handleSelectMax","title","disabled","isFinite","eq","console","alignSelf","WithdrawModal","useUnstakeFarms","pid","masterChefContract","useMasterchef","onUnstake","amount","unstakeFarm","useStakeFarms","onStake","stakeFarm","txHash","info","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","location","useLocation","dispatch","useAppDispatch","account","useWeb3React","lpPrice","useLpTokenPrice","handleStake","fetchFarmUserDataAsync","pids","handleUnstake","stakedBalanceBigNumber","getBalanceAmount","useModal","onPresentDeposit","onPresentWithdraw","Balance","getBalanceNumber","times","unit","some","item","pathname","includes","useHarvestFarm","farmPid","onReward","harvestFarm","HarvestAction","earnings","cakePrice","usePriceCakeBusd","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","toNumber","useApproveFarm","lpContract","onApprove","approve","address","ethers","constants","MaxUint256","tx","wait","receipt","status","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","isApproved","isGreaterThan","useERC20","handleApprove","textTransform","pr","lpSymbol","mt","ConnectWalletButton","ApyButton","apr","displayApr","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","isFarm","onPresentApyModal","event","stopPropagation","ml","StyledCard","Card","FarmCardInnerContainer","ExpandingWrapper","cardBorder","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","maximumFractionDigits","toUpperCase","earnLabel","dual","BASE_SWAP_URL","isPromotedFarm","isActive","isCommunity","display","CardActionsContainer","getBscScanLink","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","TokenWrapper","Farm","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","marginBottom","marginTop","expandAnimation","keyframes","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","bsc","StakedAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","useDelayedUnmount","toggleActionPanel","isXs","tableSchema","columnNames","column","columnIndex","indexOf","colSpan","card","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","getDisplayApr","Image","cakeRewardsApr","lpRewardsApr","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","localStorageKey","setViewMode","sortOption","setSortOption","chosenFarmsLength","isArchived","isInactive","usePollFarmsData","useUserFarmStakedOnly","stakedOnly","setStakedOnly","activeFarms","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","ChainId","MAINNET","lowercaseQuery","latinise","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","chosenFarmsMemoized","chosenFarms","farms","orderBy","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","Page","checked","Select","option","marginLeft","SearchInput","sort","b","exact","renderContent","Loading"],"mappings":"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","file":"static/js/6.15b72fe0.chunk.js","sourcesContent":["!function(a,n){\"function\"==typeof define&&define.amd?define(n):\"object\"==typeof exports?module.exports=n(require,exports,module):a.CountUp=n()}(this,function(a,n,t){var e=function(a,n,t,e,i,r){function o(a){var n,t,e,i,r,o,s=a<0;if(a=Math.abs(a).toFixed(l.decimals),a+=\"\",n=a.split(\".\"),t=n[0],e=n.length>1?l.options.decimal+n[1]:\"\",l.options.useGrouping){for(i=\"\",r=0,o=t.length;r<o;++r)0!==r&&r%3===0&&(i=l.options.separator+i),i=t[o-r-1]+i;t=i}return l.options.numerals.length&&(t=t.replace(/[0-9]/g,function(a){return l.options.numerals[+a]}),e=e.replace(/[0-9]/g,function(a){return l.options.numerals[+a]})),(s?\"-\":\"\")+l.options.prefix+t+e+l.options.suffix}function s(a,n,t,e){return t*(-Math.pow(2,-10*a/e)+1)*1024/1023+n}function u(a){return\"number\"==typeof a&&!isNaN(a)}var l=this;if(l.version=function(){return\"1.9.3\"},l.options={useEasing:!0,useGrouping:!0,separator:\",\",decimal:\".\",easingFn:s,formattingFn:o,prefix:\"\",suffix:\"\",numerals:[]},r&&\"object\"==typeof r)for(var m in l.options)r.hasOwnProperty(m)&&null!==r[m]&&(l.options[m]=r[m]);\"\"===l.options.separator?l.options.useGrouping=!1:l.options.separator=\"\"+l.options.separator;for(var d=0,c=[\"webkit\",\"moz\",\"ms\",\"o\"],f=0;f<c.length&&!window.requestAnimationFrame;++f)window.requestAnimationFrame=window[c[f]+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[c[f]+\"CancelAnimationFrame\"]||window[c[f]+\"CancelRequestAnimationFrame\"];window.requestAnimationFrame||(window.requestAnimationFrame=function(a,n){var t=(new Date).getTime(),e=Math.max(0,16-(t-d)),i=window.setTimeout(function(){a(t+e)},e);return d=t+e,i}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),l.initialize=function(){return!!l.initialized||(l.error=\"\",l.d=\"string\"==typeof a?document.getElementById(a):a,l.d?(l.startVal=Number(n),l.endVal=Number(t),u(l.startVal)&&u(l.endVal)?(l.decimals=Math.max(0,e||0),l.dec=Math.pow(10,l.decimals),l.duration=1e3*Number(i)||2e3,l.countDown=l.startVal>l.endVal,l.frameVal=l.startVal,l.initialized=!0,!0):(l.error=\"[CountUp] startVal (\"+n+\") or endVal (\"+t+\") is not a number\",!1)):(l.error=\"[CountUp] target is null or undefined\",!1))},l.printValue=function(a){var n=l.options.formattingFn(a);\"INPUT\"===l.d.tagName?this.d.value=n:\"text\"===l.d.tagName||\"tspan\"===l.d.tagName?this.d.textContent=n:this.d.innerHTML=n},l.count=function(a){l.startTime||(l.startTime=a),l.timestamp=a;var n=a-l.startTime;l.remaining=l.duration-n,l.options.useEasing?l.countDown?l.frameVal=l.startVal-l.options.easingFn(n,0,l.startVal-l.endVal,l.duration):l.frameVal=l.options.easingFn(n,l.startVal,l.endVal-l.startVal,l.duration):l.countDown?l.frameVal=l.startVal-(l.startVal-l.endVal)*(n/l.duration):l.frameVal=l.startVal+(l.endVal-l.startVal)*(n/l.duration),l.countDown?l.frameVal=l.frameVal<l.endVal?l.endVal:l.frameVal:l.frameVal=l.frameVal>l.endVal?l.endVal:l.frameVal,l.frameVal=Math.round(l.frameVal*l.dec)/l.dec,l.printValue(l.frameVal),n<l.duration?l.rAF=requestAnimationFrame(l.count):l.callback&&l.callback()},l.start=function(a){l.initialize()&&(l.callback=a,l.rAF=requestAnimationFrame(l.count))},l.pauseResume=function(){l.paused?(l.paused=!1,delete l.startTime,l.duration=l.remaining,l.startVal=l.frameVal,requestAnimationFrame(l.count)):(l.paused=!0,cancelAnimationFrame(l.rAF))},l.reset=function(){l.paused=!1,delete l.startTime,l.initialized=!1,l.initialize()&&(cancelAnimationFrame(l.rAF),l.printValue(l.startVal))},l.update=function(a){if(l.initialize()){if(a=Number(a),!u(a))return void(l.error=\"[CountUp] update() - new endVal is not a number: \"+a);l.error=\"\",a!==l.frameVal&&(cancelAnimationFrame(l.rAF),l.paused=!1,delete l.startTime,l.startVal=l.frameVal,l.endVal=a,l.countDown=l.startVal>l.endVal,l.rAF=requestAnimationFrame(l.count))}},l.initialize()&&l.printValue(l.startVal)};return e});","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar warning = require('warning');\nvar CountUp$1 = require('countup.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\nvar warning__default = /*#__PURE__*/_interopDefaultLegacy(warning);\nvar CountUp__default = /*#__PURE__*/_interopDefaultLegacy(CountUp$1);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing;\n  return new CountUp__default['default'](el, start, end, decimals, duration, {\n    decimal: decimal,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator\n  });\n};\n\nvar CountUp = /*#__PURE__*/function (_Component) {\n  _inherits(CountUp, _Component);\n\n  var _super = _createSuper(CountUp);\n\n  function CountUp() {\n    var _this;\n\n    _classCallCheck(this, CountUp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"checkProps\", function (updatedProps) {\n      var _this$props = _this.props,\n          start = _this$props.start,\n          suffix = _this$props.suffix,\n          prefix = _this$props.prefix,\n          redraw = _this$props.redraw,\n          duration = _this$props.duration,\n          separator = _this$props.separator,\n          decimals = _this$props.decimals,\n          decimal = _this$props.decimal,\n          className = _this$props.className;\n      var hasPropsChanged = duration !== updatedProps.duration || start !== updatedProps.start || suffix !== updatedProps.suffix || prefix !== updatedProps.prefix || separator !== updatedProps.separator || decimals !== updatedProps.decimals || decimal !== updatedProps.decimal || className !== updatedProps.className;\n      return hasPropsChanged || redraw;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createInstance\", function () {\n      if (typeof _this.props.children === 'function') {\n        // Warn when user didn't use containerRef at all\n        warning__default['default'](_this.containerRef.current && (_this.containerRef.current instanceof HTMLElement || _this.containerRef.current instanceof SVGTextElement || _this.containerRef.current instanceof SVGTSpanElement), \"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an HTMLElement, eg. <span ref={containerRef} />.\");\n      }\n\n      return createCountUpInstance(_this.containerRef.current, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseResume\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reset = _assertThisInitialize.reset,\n          start = _assertThisInitialize.restart,\n          update = _assertThisInitialize.update;\n\n      var onPauseResume = _this.props.onPauseResume;\n\n      _this.instance.pauseResume();\n\n      onPauseResume({\n        reset: reset,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize2.pauseResume,\n          start = _assertThisInitialize2.restart,\n          update = _assertThisInitialize2.update;\n\n      var onReset = _this.props.onReset;\n\n      _this.instance.reset();\n\n      onReset({\n        pauseResume: pauseResume,\n        start: start,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"restart\", function () {\n      _this.reset();\n\n      _this.start();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize3.pauseResume,\n          reset = _assertThisInitialize3.reset,\n          start = _assertThisInitialize3.restart,\n          update = _assertThisInitialize3.update;\n\n      var _this$props2 = _this.props,\n          delay = _this$props2.delay,\n          onEnd = _this$props2.onEnd,\n          onStart = _this$props2.onStart;\n\n      var run = function run() {\n        return _this.instance.start(function () {\n          return onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: start,\n            update: update\n          });\n        });\n      }; // Delay start if delay prop is properly set\n\n\n      if (delay > 0) {\n        _this.timeoutId = setTimeout(run, delay * 1000);\n      } else {\n        run();\n      }\n\n      onStart({\n        pauseResume: pauseResume,\n        reset: reset,\n        update: update\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (newEnd) {\n      var _assertThisInitialize4 = _assertThisInitialized(_this),\n          pauseResume = _assertThisInitialize4.pauseResume,\n          reset = _assertThisInitialize4.reset,\n          start = _assertThisInitialize4.restart;\n\n      var onUpdate = _this.props.onUpdate;\n\n      _this.instance.update(newEnd);\n\n      onUpdate({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: start\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React__default['default'].createRef());\n\n    return _this;\n  }\n\n  _createClass(CountUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          delay = _this$props3.delay;\n      this.instance = this.createInstance(); // Don't invoke start if component is used as a render prop\n\n      if (typeof children === 'function' && delay !== 0) return; // Otherwise just start immediately\n\n      this.start();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var end = this.props.end;\n      return this.checkProps(nextProps) || end !== nextProps.end;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // If duration, suffix, prefix, separator or start has changed\n      // there's no way to update the values.\n      // So we need to re-create the CountUp instance in order to\n      // restart it.\n      var _this$props4 = this.props,\n          end = _this$props4.end,\n          preserveValue = _this$props4.preserveValue;\n\n      if (this.checkProps(prevProps)) {\n        this.instance.reset();\n        this.instance = this.createInstance();\n        this.start();\n      } // Only end value has changed, so reset and and re-animate with the updated\n      // end value.\n\n\n      if (end !== prevProps.end) {\n        if (!preserveValue) {\n          this.instance.reset();\n        }\n\n        this.instance.update(end);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeoutId) {\n        clearTimeout(this.timeoutId);\n      }\n\n      this.instance.reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          children = _this$props5.children,\n          className = _this$props5.className,\n          style = _this$props5.style;\n      var containerRef = this.containerRef,\n          pauseResume = this.pauseResume,\n          reset = this.reset,\n          restart = this.restart,\n          update = this.update;\n\n      if (typeof children === 'function') {\n        return children({\n          countUpRef: containerRef,\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      }\n\n      return /*#__PURE__*/React__default['default'].createElement(\"span\", {\n        className: className,\n        ref: containerRef,\n        style: style\n      });\n    }\n  }]);\n\n  return CountUp;\n}(React.Component);\n\n_defineProperty(CountUp, \"propTypes\", {\n  decimal: PropTypes__default['default'].string,\n  decimals: PropTypes__default['default'].number,\n  delay: PropTypes__default['default'].number,\n  easingFn: PropTypes__default['default'].func,\n  end: PropTypes__default['default'].number.isRequired,\n  formattingFn: PropTypes__default['default'].func,\n  onEnd: PropTypes__default['default'].func,\n  onStart: PropTypes__default['default'].func,\n  prefix: PropTypes__default['default'].string,\n  redraw: PropTypes__default['default'].bool,\n  separator: PropTypes__default['default'].string,\n  start: PropTypes__default['default'].number,\n  startOnMount: PropTypes__default['default'].bool,\n  suffix: PropTypes__default['default'].string,\n  style: PropTypes__default['default'].object,\n  useEasing: PropTypes__default['default'].bool,\n  preserveValue: PropTypes__default['default'].bool\n});\n\n_defineProperty(CountUp, \"defaultProps\", {\n  decimal: '.',\n  decimals: 0,\n  delay: null,\n  duration: null,\n  easingFn: null,\n  formattingFn: null,\n  onEnd: function onEnd() {},\n  onPauseResume: function onPauseResume() {},\n  onReset: function onReset() {},\n  onStart: function onStart() {},\n  onUpdate: function onUpdate() {},\n  prefix: '',\n  redraw: false,\n  separator: '',\n  start: 0,\n  startOnMount: true,\n  suffix: '',\n  style: undefined,\n  useEasing: true,\n  preserveValue: false\n});\n\n// and just sets the innerHTML of the element.\n\nvar MOCK_ELEMENT = {\n  innerHTML: null\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _props = _objectSpread2(_objectSpread2({}, CountUp.defaultProps), props);\n\n  var start = _props.start,\n      formattingFn = _props.formattingFn;\n\n  var _useState = React.useState(typeof formattingFn === 'function' ? formattingFn(start) : start),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var countUpRef = React.useRef(null);\n  var timerRef = React.useRef(null);\n\n  var createInstance = function createInstance() {\n    var countUp = createCountUpInstance(MOCK_ELEMENT, _props);\n    var formattingFnRef = countUp.options.formattingFn;\n\n    countUp.options.formattingFn = function () {\n      var result = formattingFnRef.apply(void 0, arguments);\n      setCount(result);\n    };\n\n    return countUp;\n  };\n\n  var getCountUp = function getCountUp() {\n    var countUp = countUpRef.current;\n\n    if (countUp !== null) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  };\n\n  var reset = function reset() {\n    var onReset = _props.onReset;\n    getCountUp().reset();\n    onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  };\n\n  var restart = function restart() {\n    var onStart = _props.onStart,\n        onEnd = _props.onEnd;\n    getCountUp().reset();\n    getCountUp().start(function () {\n      onEnd({\n        pauseResume: pauseResume,\n        reset: reset,\n        start: restart,\n        update: update\n      });\n    });\n    onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  };\n\n  var pauseResume = function pauseResume() {\n    var onPauseResume = _props.onPauseResume;\n    getCountUp().pauseResume();\n    onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  };\n\n  var update = function update(newEnd) {\n    var onUpdate = _props.onUpdate;\n    getCountUp().update(newEnd);\n    onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  };\n\n  React.useEffect(function () {\n    var delay = _props.delay,\n        onStart = _props.onStart,\n        onEnd = _props.onEnd,\n        startOnMount = _props.startOnMount;\n\n    if (startOnMount) {\n      timerRef.current = setTimeout(function () {\n        onStart({\n          pauseResume: pauseResume,\n          reset: reset,\n          update: update\n        });\n        getCountUp().start(function () {\n          clearTimeout(timerRef.current);\n          onEnd({\n            pauseResume: pauseResume,\n            reset: reset,\n            start: restart,\n            update: update\n          });\n        });\n      }, delay * 1000);\n    }\n\n    return function () {\n      clearTimeout(timerRef.current);\n      reset();\n    };\n  }, []);\n  return {\n    countUp: count,\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update\n  };\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: white;\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color='white' bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from '@pancakeswap/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading } from '@pancakeswap/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  token: Token\n  quoteToken: Token\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, multiplier, isCommunityFarm, token, quoteToken }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\" style={{ color: '#F3841E' }}>{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\nimport Spacer from './Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'bignumber.js'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  // box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceBigNumber = new BigNumber(balance)\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString()\n    }\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport { ModalActions, ModalInput } from 'components/Modal'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onConfirm(val)\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n              onDismiss()\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import { useCallback } from 'react'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useUnstakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await unstakeFarm(masterChefContract, pid, amount)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakeFarms\n","import { useCallback } from 'react'\nimport { stakeFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useStakeFarms = (pid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\n      console.info(txHash)\n    },\n    [masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakeFarms\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/farms/hooks'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport useUnstakeFarms from '../../hooks/useUnstakeFarms'\nimport useStakeFarms from '../../hooks/useStakeFarms'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { harvestFarm } from 'utils/calls'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useHarvestFarm = (farmPid: number) => {\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    await harvestFarm(masterChefContract, farmPid)\n  }, [farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestFarm\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'SPHYNX' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { ethers, Contract } from 'ethers'\nimport { useMasterchef } from 'hooks/useContract'\n\nconst useApproveFarm = (lpContract: Contract) => {\n  const masterChefContract = useMasterchef()\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n      return receipt.status\n    } catch (e) {\n      return false\n    }\n  }, [lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApproveFarm\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          Sphynx\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, displayApr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_SWAP_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  `\n  \nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  background-color: ${({theme}) => theme.colors.input};\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n  background-color: ${({theme}) => theme.colors.input};\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('Sphynx + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'SPHYNX'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <>\n                  <ApyButton\n                    lpLabel={lpLabel}\n                    addLiquidityUrl={addLiquidityUrl}\n                    cakePrice={cakePrice}\n                    apr={farm.apr}\n                    displayApr={displayApr}\n                  />\n                  {displayApr}%\n                </>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          account={account}\n          addLiquidityUrl={addLiquidityUrl} />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`https://sphynxswap.finance/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_SWAP_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton\n              lpLabel={lpLabel}\n              cakePrice={cakePrice}\n              apr={originalValue}\n              displayApr={value}\n              addLiquidityUrl={addLiquidityUrl}\n            />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/farms/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport { TokenPairImage } from 'components/TokenImage'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n}\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokenWrapper = styled.div`\n  padding-right: 8px;\n  width: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      <TokenWrapper>\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\n      </TokenWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from '@pancakeswap/uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.text};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && t('Details')}\n      <ArrowIcon color=\"white\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      {t('The multiplier represents the amount of SPHYNX rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 1 SPHYNX per block, a 40x farm would be getting 40 SPHYNX per block.')}\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React, { useState } from 'react'\nimport { Button, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const { toastSuccess, toastError } = useToast()\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const cakePrice = usePriceCakeBusd()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          SPHYNX\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Heading>{displayBalance}</Heading>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            try {\n              await onReward()\n              toastSuccess(\n                `${t('Harvested')}!`,\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n              )\n            } catch (e) {\n              toastError(\n                t('Error'),\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n              )\n              console.error(e)\n            } finally {\n              setPendingTx(false)\n            }\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text, Heading } from '@pancakeswap/uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_SWAP_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport useStakeFarms from '../../../hooks/useStakeFarms'\nimport useApproveFarm from '../../../hooks/useApproveFarm'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const { onStake } = useStakeFarms(pid)\n  const { onUnstake } = useUnstakeFarms(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0000001)) {\n      return stakedBalanceBigNumber.toFixed(10, BigNumber.ROUND_DOWN)\n    }\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Heading>{displayBalance()}</Heading>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake LP')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\nimport { BASE_SWAP_URL } from 'config'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBscScanLink } from 'utils'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = getAddress(farm.lpAddresses)\n  const bsc = getBscScanLink(lpAddress, 'address')\n  const info = `${BASE_SWAP_URL}/pool/${lpAddress}`\n  const addLiquidityUrl = `${BASE_SWAP_URL}`\n\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={addLiquidityUrl}>\n              {t('Get %symbol%', { symbol: lpLabel })}\n            </StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\n        <TagsContainer>\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\n          {dual ? <DualTag /> : null}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/farms/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" color=\"white\" onClick={scrollToTop} style={{ color: 'white' }}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"white\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from '../types'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickFarmTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Toggle, Text, Button, ArrowForwardIcon, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/farms/hooks'\nimport usePersistState from 'hooks/usePersistState'\n// import PyramidImage from 'assets/svg/pyramid.png'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport { useUserFarmStakedOnly } from 'state/user/hooks'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Loading from 'components/Loading'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenFarmsLength = useRef(0)\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useUserFarmStakedOnly(isActive)\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const chosenFarmsMemoized = useMemo(() => {\n    let chosenFarms = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      chosenFarms = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      chosenFarms = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      chosenFarms = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(chosenFarms).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  chosenFarmsLength.current = chosenFarmsMemoized.length\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => {\n          if (farmsCurrentlyVisible <= chosenFarmsLength.current) {\n            return farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE\n          }\n          return farmsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [chosenFarmsMemoized, observerIsSet])\n\n  const rowData = chosenFarmsMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed={false}\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/history`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n        <Route exact path={`${path}/archived`}>\n          {chosenFarmsMemoized.map((farm) => (\n            <FarmCard\n              key={farm.pid}\n              farm={farm}\n              displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n              cakePrice={cakePrice}\n              account={account}\n              removed\n            />\n          ))}\n        </Route>\n      </FlexLayout>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <PageHeader>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"white\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          {t('Stake LP tokens to earn.')}\n        </Heading>\n        {/* <NavLink exact activeClassName=\"active\" to=\"/farms/auction\" id=\"lottery-pot-banner\">\n          <Button p=\"0\" variant=\"text\">\n            <Text color=\"primary\" bold fontSize=\"16px\" mr=\"4px\">\n              {t('Community Auctions')}\n            </Text>\n            <ArrowForwardIcon color=\"primary\" />\n          </Button>\n        </NavLink> */}\n      </PageHeader>\n      <Page>\n        <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n            <ToggleWrapper>\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n              <Text> {t('Staked only')}</Text>\n            </ToggleWrapper>\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper>\n              <Text textTransform=\"uppercase\">{t('Sort by')}</Text>\n              <Select\n                options={[\n                  {\n                    label: t('Hot'),\n                    value: 'hot',\n                  },\n                  {\n                    label: t('APR'),\n                    value: 'apr',\n                  },\n                  {\n                    label: t('Multiplier'),\n                    value: 'multiplier',\n                  },\n                  {\n                    label: t('Earned'),\n                    value: 'earned',\n                  },\n                  {\n                    label: t('Liquidity'),\n                    value: 'liquidity',\n                  },\n                ]}\n                onChange={handleSortOptionChange}\n              />\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer>\n        {renderContent()}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\">\n            <Loading />\n          </Flex>\n        )}\n        <div ref={loadMoreRef} />\n        {/* <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}